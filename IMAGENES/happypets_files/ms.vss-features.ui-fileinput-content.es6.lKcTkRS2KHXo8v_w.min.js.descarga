"use strict";define("VSSUI",["require","exports","react","VSS/Core/Util/String"],function(e,t,s,i){var r,l,n;r=t.ResourcesFileInput={},t.ResourcesFileInput.FileInputBrowseButtonLabel="Browse...",t.ResourcesFileInput.FileInputDragDropLabel="Drag and drop files here or click browse",t.ResourcesFileInput.FileInputDragDropSingleFileLabel="Drag and drop a file here or click browse to select a file.",t.ResourcesFileInput.FileInputErrorDuplicateFileName='Duplicate file: "{0}". Cannot upload two files with the same file name.',t.ResourcesFileInput.FileInputErrorLabel="Error",t.ResourcesFileInput.FileInputErrorMaxFileSize="File {0} is {1} which exceeds the maximum size allowed for upload of a single file ({2}).",t.ResourcesFileInput.FileInputErrorMaxNumFiles="Only {0} files are allowed to be uploaded at one time.",t.ResourcesFileInput.FileInputErrorNotAllowedExtensionType="File extension {0} is not supported. Allowed Extensions : {1}",t.ResourcesFileInput.FileInputErrorSingleFileOnly="Only a single file can be uploaded at a time.",t.ResourcesFileInput.FileInputErrorTotalFileSize="The files being added total {0} which exceeds the maximum total size allowed to be uploaded ({1}).",t.ResourcesFileInput.FileInputReadErrorFormat="Failed to read file {0}: {1}",t.ResourcesFileInput.FileInputRemoveAll="remove all",t.ResourcesFileInput.FileInputRemoveFile="remove",t.ResourcesFileInput.FileSizeBytesFormat="{0} bytes",t.ResourcesFileInput.FileSizeKBFormat="{0} KB",t.ResourcesFileInput.FileSizeMBFormat="{0} MB",t.ResourcesFileInput.Loading="Loading...",function(e){l=t.ComponentsFileInputFileInput={};t.ComponentsFileInputFileInput.FileInput=class extends s.Component{constructor(){super(...arguments),this._files=[],this._clear=(()=>{this._files.forEach(e=>{e.fileReader.readyState!==FileReader.DONE&&e.fileReader.abort()}),this._files=[],this.setState({files:this._files,errorMessage:""}),this._triggerUpdateEvent()}),this._remove=(e=>{this._files=this._files.filter(t=>t!==e),this.setState({files:this._files}),this._triggerUpdateEvent()}),this._addFiles=(e=>{if(this.props.allowedFileExtensions&&this.props.allowedFileExtensions.length>0)for(let t=0;t<e.length;t++){const s=e[t].name.split(".").pop();let l=!1;for(let e=0;e<this.props.allowedFileExtensions.length;e++)if(s.toLocaleLowerCase()===this.props.allowedFileExtensions[e].toLocaleLowerCase()){l=!0;break}if(!l){const e=(0,i.format)(r.FileInputErrorNotAllowedExtensionType,s,this.props.allowedFileExtensions.join());return void this.setState({errorMessage:e})}}const t={};for(let e=0,s=this._files.length;e<s;e++)t[this.props.fileNamesCaseSensitive?this._files[e].result.name:this._files[e].result.name.toLowerCase()]=1;let s=this._getTotalFilesSize();for(let l=0,n=e.length;l<n;l++){if(this.props.maximumSingleFileSize&&e[l].size>this.props.maximumSingleFileSize){const t=this._getLimitErrorMessage((0,i.format)(r.FileInputErrorMaxFileSize,e[l].name,this._getFriendlySizeString(e[l].size),this._getFriendlySizeString(this.props.maximumSingleFileSize)),{fileSize:e[l].size});return void this.setState({errorMessage:t})}s+=e[l].size;const n=this.props.fileNamesCaseSensitive?e[l].name:e[l].name.toLowerCase();if(t[n]){const t=(0,i.format)(r.FileInputErrorDuplicateFileName,e[l].name);return void this.setState({errorMessage:t})}t[n]=1}if(this.props.maximumTotalFileSize&&s>this.props.maximumTotalFileSize){const e=this._getLimitErrorMessage((0,i.format)(r.FileInputErrorTotalFileSize,this._getFriendlySizeString(s),this._getFriendlySizeString(this.props.maximumTotalFileSize)),{totalSize:s});return void this.setState({errorMessage:e})}const l=this._files.length+e.length;if(this.props.maximumNumberOfFiles&&l>this.props.maximumNumberOfFiles){const e=1===this.props.maximumNumberOfFiles?r.FileInputErrorSingleFileOnly:(0,i.format)(r.FileInputErrorMaxNumFiles,this.props.maximumNumberOfFiles),t=this._getLimitErrorMessage(e,{fileCount:l});this.setState({errorMessage:t})}else for(let t=0,s=e.length;t<s;t++)this._addFile(e[t])})}componentDidMount(){this.props.initialFiles&&this._addFiles(this.props.initialFiles)}render(){const e=this.props.maximumNumberOfFiles||0,t=this._files,i=this.state&&this.state.errorMessage?this.state.errorMessage:"",l=!e||t.length<e;let o=null;this.props.allowedFileExtensions&&(o=this.props.allowedFileExtensions.map(e=>"."!==e[0]?"."+e:e).join());const a=1===e?r.FileInputDragDropSingleFileLabel:r.FileInputDragDropLabel,p=1!==e;return s.createElement(n,{dragDropLabel:a,multiple:p,canAddMoreFiles:l,accept:o,files:t,errorMessage:i,addFiles:this._addFiles,remove:this._remove,clear:this._clear})}_addFile(e){const t={name:e.name,size:e.size,type:e.type,lastModifiedDate:e.lastModified?new Date(e.lastModified):e.lastModifiedDate,statusText:r.Loading,isError:!1},s=new FileReader,l={result:t,fileReader:s};this._files.push(l);const n=()=>{this.setState({files:this._files,errorMessage:this.state&&this.state.errorMessage?this.state.errorMessage:""}),this._triggerUpdateEvent()},o=()=>{t.statusText=this._getFriendlySizeString(e.size),n()};s.onload=(e=>{if(t.encoding=0,1===this.props.resultContentType)t.content=s.result||"";else{const e=s.result;e&&e.indexOf(",")>-1?(t.content=e.substr(e.indexOf(",")+1),"//"===t.content.substr(0,2)&&t.content.length%4==2&&(t.content=t.content.substr(2))):t.content="",this.props.detectEncoding&&(t.encoding=function(e){if(void 0===window.atob)return 0;const t=window.atob(e),s=[];for(let e=0;e<4;e++)s.push(t.charCodeAt(e));if(254===s[0]&&255===s[1])return 6;if(255===s[0]&&254===s[1])return 0===s[2]&&0===s[3]?5:7;if(239===s[0]&&187===s[1]&&191===s[2])return 3;if(0===s[0]&&0===s[1]&&254===s[2]&&255===s[3])return 4;let i=!0;for(let e=0,s=t.length;e<s;e++){const s=t.charCodeAt(e);if((s<=31||127==s)&&9!=s&&12!=s&&13!=s&&10!=s&&26!=s)return 1;s>127&&(i=!1)}return i?2:3}(t.content))}o()}),s.onerror=(e=>{(0,i.format)(r.FileInputReadErrorFormat,t.name,s.error.message),t.statusText=r.FileInputErrorLabel,t.isError=!0,n()}),s.onloadend=(e=>{n()}),1===this.props.resultContentType?s.readAsText(e):2===this.props.resultContentType?(t.encoding=0,t.file=e,o(),n()):s.readAsDataURL(e)}_triggerUpdateEvent(){this.props.updateHandler&&this.props.updateHandler({loading:this._files.some(e=>e.fileReader.readyState!==FileReader.DONE),files:this._files})}_getTotalFilesSize(){let e=0;const t=this._files;for(let s=0,i=t.length;s<i;s++)e+=t[s].result.size;return e}_getLimitErrorMessage(e,t){let s=e;return this.props.limitMessageFormatter&&(s=this.props.limitMessageFormatter(e,t)),s}_getFriendlySizeString(e,t=1){return Math.pow(10,t),e<1024?(0,i.format)(r.FileSizeBytesFormat,e):e<1048576?(0,i.format)(r.FileSizeKBFormat,Math.round(e/1024*10)/10):(0,i.format)(r.FileSizeMBFormat,Math.round(e/1048576*10)/10)}};class n extends s.Component{constructor(){super(...arguments),this._onClearClick=(()=>{this.props.clear&&this.props.clear()}),this._onRemoveClick=(e=>{this.props.remove&&this.props.remove(e)}),this._onBrowseContainerClick=(()=>{this._fileInput&&this._fileInput.click()}),this._resolveFileInput=(e=>{this._fileInput=e}),this._onDragEnter=(e=>{this._setDropEffect(e),e.preventDefault(),this.setState({isDragging:!0})}),this._onDragLeave=(e=>{e.preventDefault(),this.setState({isDragging:!1})}),this._onDragOver=(e=>{this._setDropEffect(e),e.preventDefault(),this.setState({isDragging:!0})}),this._onDrop=(e=>{this._setDropEffect(e),e.preventDefault(),this.setState({isDragging:!1});const t=e.dataTransfer.files;t&&t.length>0&&this.props.addFiles&&this.props.addFiles(t)}),this._onFileInputChange=(e=>{e.currentTarget.files&&e.currentTarget.files.length&&(this.props.addFiles&&this.props.addFiles(e.currentTarget.files),e.currentTarget.value="")})}render(){const e=(0,t.Util.css)("vss-FileInput-filesDropTarget",this.state.isDragging?this.props.dragOverCssClass||"vss-FileInput-dragOver":"");return s.createElement("div",{className:"vss-FileInput"},this.props.canAddMoreFiles&&s.createElement("div",{className:e,onDragOver:this._onDragOver,onDragLeave:this._onDragLeave,onDragEnter:this._onDragEnter,onDrop:this._onDrop},s.createElement("div",{className:"vss-FileInput-dragDropTable flex-row",role:"presentation"},s.createElement("div",{className:"vss-FileInput-dragDropLabel flex-grow"},s.createElement("span",null,this.props.dragDropLabel)),s.createElement("div",{className:"vss-FileInput-browseButton"},s.createElement(t.Button.Button,{className:"vss-FileInput-browseContainer",onClick:this._onBrowseContainerClick},r.FileInputBrowseButtonLabel),s.createElement("input",{type:"file",ref:this._resolveFileInput,onChange:this._onFileInputChange,accept:this.props.accept,multiple:this.props.multiple,style:{display:"none"}})))),this.props.files.length>1&&s.createElement("div",{className:"vss-FileInput-overallStatusContainer"},s.createElement("span",{className:"vss-FileInput-overallStatusActions"},s.createElement(t.Link.Link,{onClick:this._onClearClick},r.FileInputRemoveAll))),s.createElement("div",{className:"vss-FileInput-errorContainer"},this.props.errorMessage),this.props.files.length>0&&s.createElement("ul",{className:"vss-FileInput-fileList",style:{display:"block"}},this.props.files.map(e=>s.createElement("li",{key:e.result.name},s.createElement("div",{className:"vss-FileInput-headerContainer"},s.createElement("span",{className:"vss-FileInput-fileName"},e.result.name)),s.createElement("div",{className:"vss-FileInput-detailsContainer"},s.createElement("span",{className:e.result.isError?"vss-FileInput-status-error":"vss-FileInput-status"},e.result.statusText),s.createElement("span",{className:"vss-FileInput-links"},s.createElement(t.Button.Button,{tabIndex:0,onClick:()=>this._onRemoveClick(e),role:"button"},r.FileInputRemoveFile)))))))}componentWillMount(){this.setState({isDragging:!1})}_setDropEffect(e){try{e.dataTransfer.dropEffect="copy"}catch(e){}}}}(),n=t.ComponentsFileInputindex={},__exportStar(l,t.ComponentsFileInputindex),t.FileInput={},__exportStar(n,t.FileInput)},["Resources.FileInput","Components/FileInput/FileInput","Components/FileInput/index","FileInput"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-features.ui-fileinput-content"}}));