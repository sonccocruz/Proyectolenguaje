"use strict";define("VSSUI",["require","exports","VSS/Core/Observable","react"],function(t,e,s,i){var n,o,r;!function(t){n=e[t]={},e[t].ITEM_CHANGE_EVENT="item-changed";e[t].Item=class extends s.Observable{constructor(t){super(),this._currentState=Object.assign({},t.initialState)}getState(){return this._currentState}setState(s,i=!1){this._currentState=s,i||this.notify(s,e[t].ITEM_CHANGE_EVENT)}}}("ComponentsItemIndicatorItem"),function(t){o=e[t]={};class s extends i.Component{constructor(t){super(t),this._onClick=(t=>{const{item:e,onClick:s}=this.props;s&&(s(t,e),t.preventDefault())}),this._onItemChanged=(t=>{this.setState({title:t.title,isPressed:t.isPressed,iconProps:t.iconProps})}),this.state=this._buildNewState(this.props)}componentWillReceiveProps(t){this.setState(this._buildNewState(t))}componentDidMount(){this.props.item&&this.props.item.subscribe(this._onItemChanged)}componentDidUpdate(t){this.props.item!==t.item&&(this.props.item&&this.props.item.subscribe(this._onItemChanged),t.item&&t.item.unsubscribe(this._onItemChanged))}componentWillUnmount(){this.props.item&&this.props.item.unsubscribe(this._onItemChanged)}_buildNewState(t){if(t.item){const e=t.item.getState();return{title:e.title,isPressed:e.isPressed,iconProps:e.iconProps}}return{title:t.title,isPressed:t.isPressed,iconProps:t.iconProps}}render(){let{title:t,iconProps:s,isPressed:n}=this.state;const{onClick:o,className:r,onRender:c}=this.props;let a,m;const l="vss-ItemIndicator flex-noshrink flex-self-center";return c?c():(s?(t=t||s.title,m=i.createElement(e.VssIcon.VssIcon,Object.assign({},Object.assign(Object.assign({},s),{title:void 0,className:(0,e.Util.css)(s.className,r,!o&&!t&&l)})))):(a=e.Tooltip.TooltipOverflowMode.Parent,m=i.createElement("div",{className:(0,e.Util.css)(r,!o&&!t&&l)},t)),o&&(m=i.createElement(e.Button.Button,{className:(0,e.Util.css)(!t&&l),onClick:this._onClick,ariaLabel:t,ariaPressed:n},m)),t&&(m=i.createElement(e.Tooltip.TooltipHost,{hostClassName:l,content:t,overflowMode:a},m)),m)}}e[t].ItemIndicator=s;e[t].ItemIndicatorSet=class extends i.Component{constructor(){super(...arguments),this._onClick=(t=>{!t.isDefaultPrevented()&&this.props.onClick&&this.props.onClick(t)})}render(){const{indicators:t}=this.props;if(t&&t.length){const e=t.map((t,e)=>i.createElement(s,Object.assign({},t,{key:"ItemIndicator$"+e})));return i.createElement("div",{className:"vss-IndicatorSet flex-row",onClick:this._onClick},e)}return null}}}("ComponentsItemIndicatorItemIndicator"),r=e.ComponentsItemIndicatorindex={},__exportStar(n,e.ComponentsItemIndicatorindex),__exportStar(o,e.ComponentsItemIndicatorindex),e.ItemIndicator={},__exportStar(r,e.ItemIndicator)},["Components/ItemIndicator/Item","Components/ItemIndicator/ItemIndicator","Components/ItemIndicator/index","ItemIndicator"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-features.ui-item-indicator-content"}}));