"use strict";define("VC/ProjectOverview",["require","exports","react","VSSUI/Spinner","VSS/Core/Util/Object","VSSUI/Util","VSS/Core/Util/String","VSS/Legacy/Legacy","VSS/Platform/Components/FPSLink","VSS/Platform/Layout","VSS/Platform/Location","VSS/Core/Util/Promise","VSSUI/VssIcon","VC/Common/Components/RepositoryDropdown","VC/Common/Utils/Ref","VSS/Platform/Context"],function(e,t,i,o,s,r,a,n,c,d,p,h,m,l,g,S){var f,v;f=t.Resources={},t.Resources.ReadmeChoiceName="Readme file",t.Resources.SelectRepositoryLabel="Select a repository",t.Resources.ReadmeNotFoundTitle="We couldn't find Readme.md",t.Resources.ReadmeNotFoundMessage="Seems like the file has not been created or was deleted.",t.Resources.PreviewTitle="Preview",t.Resources.RepositoryPickerDescription="Select a repository with Readme to show in the About section.",function(e){v=t.CodeAboutRegion={};class S extends d.VssComponent{constructor(e,t){super(e,t),this._readmeFileName="/README.md",this._readmeString="README.md",this._codeSource="Code",this._ttiMarked=!1,this._tfvcPrefix="$/",this._repoPickerAriaDescribedById=(0,s.getId)("repo-picker-description"),this._abortSplitTimeName="Code.FetchInitialData.Abort",this._endSplitTimeName="Code.FetchInitialData.End",this._logSplitTimeInRender=!0,this._onContentRendered=(()=>{!this._ttiMarked&&this.props.readMode&&(this.props.markTimeToInteractive(this._codeSource),this._ttiMarked=!0)}),this._onRepositorySelected=(e=>{if(!e||e.isTfvc&&e.name===this.props.repoId||!e.isTfvc&&e.id===this.props.repoId)return;const t=Object.assign(Object.assign({},this.state.pickerOptions),{selectedRepositoryId:e.id,selectedRepositoryIsFork:e.isFork,selectedRepositoryName:e.name,selectedRepositoryIsTfvc:e.isTfvc});this.setState({fetchingState:1,pickerOptions:t}),e.isTfvc?(this.props.onRepositoryChanged(e.name),this._fetchTfvcReadme(e.name)):(this.props.onRepositoryChanged(e.id),this.trackPromise(this.gitClient.getItem(e.id,this._readmeFileName,void 0,void 0,void 0,void 0,void 0,void 0,void 0,!0)).promise.then(t=>{this.setState({fetchingState:2,rendererOptions:{content:t.content,repository:e.repository,filePath:this._readmeFileName,branchName:e.repository?e.repository.defaultBranch:"master"}})},this._onFetchingReadmeFailed))}),this._onFetchingReadmeFailed=((e,t)=>{e.isCanceled||(t&&this._addSplitTiming(this._abortSplitTimeName),this.setState({fetchingState:3,rendererOptions:void 0,errorOptions:this._getErrorOptions(e)}))}),this._onFetchingInitialDataFailed=((e,t)=>{t&&t.isCanceled||this.setState({fetchingState:3,pickerOptions:e,rendererOptions:void 0,errorOptions:t?this._getErrorOptions(t):{title:f.ReadmeNotFoundTitle,message:f.ReadmeNotFoundMessage}})}),this.state={fetchingState:0}}componentDidMount(){super.componentDidMount(),this.props.readMode?(this._addSplitTiming("Code.GetReadmeData.Start"),this.trackPromise(this.context.pageContext.getService("IVssContributionService").getDataAsync(S.PROVIDER_ID)).promise.then(e=>{if(this._addSplitTiming("Code.GetReadmeData.End"),e&&this.setState({showReadmeLink:e.hasCodeAccess}),e&&e.codeReadmeData&&(e.codeReadmeData.isTfvc||e.codeReadmeData.repository)&&this.props.repoId){const{content:t,repository:i,isTfvc:o}=e.codeReadmeData,{repoId:s}=this.props;if(s.startsWith(this._tfvcPrefix)&&o||i&&s===i.id){const{projectId:o,projectName:r}=this._getProjectInfo(this.context.pageContext);if(null!=t)this.setState({fetchingState:2,rendererOptions:{repository:i,content:t,branchName:i?i.defaultBranch:void 0,filePath:s.startsWith(this._tfvcPrefix)?s+this._readmeFileName:this._readmeFileName},pickerOptions:{projectName:r},showReadmeLink:e.hasCodeAccess});else{const t=e&&e.supportsTfvc,i=this._getDefaultPickerOptions(o,r,t);this._onFetchingInitialDataFailed(i)}}else this._fetchInitialData(this.props,this.context)}else this._fetchInitialData(this.props,this.context)},e=>{e.isCanceled||(this._addSplitTiming("Code.GetReadmeData.Failed"),this._fetchInitialData(this.props,this.context))})):this._fetchInitialData(this.props,this.context)}componentDidUpdate(e,t){super.componentDidUpdate(e,t),e.repoId!==this.props.repoId&&this._fetchInitialData(this.props,this.context),!this._ttiMarked&&this.props.readMode&&3===this.state.fetchingState&&(this.props.markTimeToInteractive(this._codeSource),this._ttiMarked=!0)}render(){if(0===this.state.fetchingState)return this._logSplitTimeInRender&&(this._addSplitTiming("Code.FetchLegacyComponent.Start"),this._logSplitTimeInRender=!1),i.createElement(i.Fragment,null,this._loadingComponent(),i.createElement(n.LegacyComponent,{wrappedType:"TFS.ProjectOverview.ReadmeFileRenderer",modules:["ProjectOverview/Scripts/Shared/Components/ReadmeSection/ReadmeFileRenderer"],key:"readme-file-renderer"}));{const e=!this.props.readMode&&this.state.pickerOptions&&i.createElement(i.Fragment,null,i.createElement(l.RepositoryDropdownComponent,{className:"about-repository-selector",providerOptions:this.state.pickerOptions,ariaDescribedBy:this._repoPickerAriaDescribedById,hideSelectedItemIcon:!0}),i.createElement("div",{id:this._repoPickerAriaDescribedById,className:"hidden",hidden:!0},f.RepositoryPickerDescription));let t=null;if(this.props.readMode&&this.state.rendererOptions&&this.state.pickerOptions&&this.state.pickerOptions.projectName){const e=this.state.rendererOptions.repository;let o="",s="",n="";this.props.repoId&&this.props.repoId.startsWith(this._tfvcPrefix)?(o="tfvc-repo",s=this.props.repoId,n=(0,p.routeUrl)(this.context.pageContext,"ms.vss-code-web.tfvc-files-route",{project:this.state.pickerOptions.projectName,path:s+this._readmeFileName})):e&&(o=e.isFork?"git-fork":"git",s=e.name,n=(0,p.routeUrl)(this.context.pageContext,"ms.vss-code-web.files-route-git",{project:this.state.pickerOptions.projectName,"vc.GitRepositoryName":e.name,path:this._readmeFileName,version:(0,g.getVersionFromBranchName)((0,g.getFriendlyName)(e.defaultBranch))}));const d=(0,a.format)("{0} / {1}",s,this._readmeString),h="readme-title font-size-mm font-weight-semibold";t=i.createElement(i.Fragment,null,i.createElement(m.VssIcon,{iconName:o,iconType:1,className:"repo-icon"}),this.state.showReadmeLink?i.createElement(c.FPSLinkComponent,{className:(0,r.css)("readme-link link-text",h),href:n,telemetrySource:"project_overview_about_region_code"},d):i.createElement("span",{className:h},d))}let o=null;if(1===this.state.fetchingState)o=this._loadingComponent();else if(3===this.state.fetchingState&&this.state.errorOptions&&this.props.showError){const{message:e,title:t}=this.state.errorOptions;o=i.createElement("div",{className:"about-error-message",role:"alert"},i.createElement("div",{className:"error-title font-weight-semibold"},t),i.createElement("div",{className:"error-message"},e))}else if(2===this.state.fetchingState&&this.state.rendererOptions){const{repository:e,branchName:s,filePath:r,content:a}=this.state.rendererOptions;o=i.createElement(i.Fragment,null,!this.props.readMode&&i.createElement("div",{className:"about-preview-title"},f.PreviewTitle),t,i.createElement(n.LegacyComponent,{wrappedType:"TFS.ProjectOverview.ReadmeFileRenderer",modules:["ProjectOverview/Scripts/Shared/Components/ReadmeSection/ReadmeFileRenderer"],key:"readme-file-renderer",repository:e,branchName:s?(0,g.getFriendlyName)(s):s,filePath:r,content:a,onContentRendered:this._onContentRendered,className:"about-readme-file-renderer",loadingComponent:this._loadingComponent}))}return i.createElement("div",{className:(0,r.css)("code-about-region",this.props.readMode?"readmode":"editmode")},e,o)}}_loadingComponent(){return i.createElement(o.Spinner,{className:"about-loading-spinner"})}_fetchInitialData(e,t){this._addSplitTiming("Code.FetchInitialData.Start"),this.trackPromise(t.pageContext.getService("IVssContributionService").getDataAsync(S.PROVIDER_ID,{scope:"supportsTfvc"})).promise.then(i=>{const o=i&&i.supportsTfvc,{projectId:s,projectName:r}=this._getProjectInfo(t.pageContext);if(e.repoId)if(e.repoId.startsWith(this._tfvcPrefix)){const t={onRepositorySelected:this._onRepositorySelected,projectId:s,projectName:r,selectedRepositoryId:"tfvc",selectedRepositoryIsFork:!1,selectedRepositoryName:e.repoId,selectedRepositoryIsTfvc:!0,supportsTfvc:o};this.setState({fetchingState:1,pickerOptions:t}),this._fetchTfvcReadme(e.repoId,!0)}else{const i=this.props.readMode?this.trackPromise(t.pageContext.getService("IVssContributionService").getDataAsync(S.PROVIDER_ID,{scope:"gitRepositoryInfo"},!0).then(e=>e&&e.codeRepositoryData.repository)).promise:this.trackPromise(this.gitClient.getRepository(e.repoId)).promise,a=this.gitClient.getItem(e.repoId,this._readmeFileName,s,void 0,void 0,void 0,void 0,void 0,void 0,!0);h.allSettled([i,a]).then(e=>{if("rejected"===e[0].state){this._addSplitTiming(this._abortSplitTimeName);const t=this._getDefaultPickerOptions(s,r,o),i=e[0].reason;this._onFetchingInitialDataFailed(t,i)}else{const t=e[0].value;if(t){const i={onRepositorySelected:this._onRepositorySelected,projectId:s,projectName:r,selectedRepositoryId:t.id,selectedRepositoryIsFork:t.isFork,selectedRepositoryName:t.name,selectedRepositoryIsTfvc:!1,supportsTfvc:o};if("rejected"===e[1].state){this._addSplitTiming(this._abortSplitTimeName);const t=e[1].reason;this._onFetchingInitialDataFailed(i,t)}else{this._addSplitTiming(this._endSplitTimeName);const o={content:e[1].value.content,repository:t,filePath:this._readmeFileName,branchName:t.defaultBranch};this.setState({fetchingState:2,pickerOptions:i,rendererOptions:o})}}else{this._addSplitTiming(this._abortSplitTimeName);const e=this._getDefaultPickerOptions(s,r,o);this._onFetchingInitialDataFailed(e)}}})}else{this._addSplitTiming(this._abortSplitTimeName);const e=this._getDefaultPickerOptions(s,r,o);this.setState({fetchingState:3,pickerOptions:e,errorOptions:void 0})}},()=>{this._addSplitTiming(this._abortSplitTimeName)})}_getProjectInfo(e){const t=e.getService("ITfsPageService").getData();if(t&&t.project){const e=t.project;return{projectId:e.id,projectName:e.name}}return{}}_getDefaultPickerOptions(e,t,i){return{onRepositorySelected:this._onRepositorySelected,projectId:e,projectName:t,supportsTfvc:i,selectedRepositoryName:f.SelectRepositoryLabel}}_fetchTfvcReadme(e,t){const i=e+this._readmeFileName,o=this.context.pageContext.getRestClient("ITfvcRestClient");this.trackPromise(o.getItem(i,void 0,void 0,void 0,void 0,void 0,void 0,!0)).promise.then(e=>{t&&this._addSplitTiming(this._endSplitTimeName);const o={content:e.content,repository:void 0,filePath:i,branchName:void 0};this.setState({fetchingState:2,rendererOptions:o})},e=>{this._onFetchingReadmeFailed(e,t)})}_getErrorOptions(e){return!e||400!==e.status&&404!==e.status?void 0:{title:f.ReadmeNotFoundTitle,message:f.ReadmeNotFoundMessage}}_addSplitTiming(e){if(this._ttiMarked)return;this.context.pageContext.getService("IVssPerformanceService").addSplitTiming(e)}get gitClient(){return this._gitClient||(this._gitClient=this.context.pageContext.getRestClient("IGitRestClient")),this._gitClient}}t.CodeAboutRegion.CodeAboutRegion=S,S.PROVIDER_ID="ms.vss-code-web.code-readme-data-provider-verticals"}(),function(e){t.CodeProjectAboutService={};S.Services.add("VC.ProjectAboutService",{serviceFactory:class extends S.VssService{getAboutRegion(e,t,o,s,r){return i.createElement(v.CodeAboutRegion,{readMode:e,repoId:t,onRepositoryChanged:o,markTimeToInteractive:s,showError:r})}getChoiceName(){return f.ReadmeChoiceName}}})}()},["Resources","CodeAboutRegion","CodeProjectAboutService"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-code-web.projectoverview-content"}}));