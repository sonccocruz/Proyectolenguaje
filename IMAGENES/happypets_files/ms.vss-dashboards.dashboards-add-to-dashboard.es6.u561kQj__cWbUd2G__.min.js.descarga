"use strict";define("Dashboards/AddToDashboard",["require","exports","react","VSS/Platform/Layout","VSSUI/PickList","Dashboards/DashboardPickerProvider/DashboardPickerProviderFactory","VSS/Core/Util/String","VSS/Platform/Components/Format","VSS/Platform/Feature","VSSUI/Panel","VSSUI/Spinner"],function(e,s,a,o,t,r,d,i,n,l,c){var h,p;h=s.Resources={},s.Resources.PanelTitle="Select a dashboard",s.Resources.PanelInstruction="By selecting a dashboard you will create a copy of {0} as a widget on that dashboard",s.Resources.SelectADashboard="Select a dashboard",s.Resources.PanelOk="OK",s.Resources.PanelCancel="Cancel",s.Resources.Search="Search",s.Resources.NoItems="No results",s.Resources.AllGroupHeader="A to Z",s.Resources.AllTeamDashboardsGroupHeader="All team dashboards",s.Resources.AllProjectDashboardsGroupHeader="All project dashboards",s.Resources.FavoritesGroupHeader="Favorites",function(e){p=s.SimpleDashboardPicker={};s.SimpleDashboardPicker.SimpleDashboardPicker=class extends o.VssComponent{constructor(){super(...arguments),this.onSelectedItemChanged=(e=>{this.props.onSelection(e.selectedItems&&e.selectedItems[0])}),this.getListItem=(e=>{const s=e.groupKey||e.ownerId;return{name:e.displayName,key:`${s} - ${e.id}`,groupKey:s,iconProps:{iconType:0,iconName:"ViewDashboard"}}})}render(){return a.createElement(t.PickListDropdown,{className:"dashboard-picker",getPickListItems:()=>this.props.dashboards,groups:this.props.groups,pickListClassName:"dashboard-item-picker-dropdown",placeholder:h.SelectADashboard,getListItem:this.getListItem,onSelectionChanged:this.onSelectedItemChanged,selectedItems:void 0!==this.props.selectedItem?[this.props.selectedItem]:void 0,searchTextPlaceholder:h.Search,isSearchable:!0,searchNoResultsText:h.NoItems})}}}(),function(e){s.AddToDashboardPanel={};class t extends o.VssComponent{constructor(e,s){super(e,s),this.onSelectedDashboardChanged=(e=>{this.setState({selectedItem:e})}),this.onOk=(()=>{this.props.onOk(this.state.selectedItem),this.publish("Dashboards.AddToDashboardPanel.Ok")}),this.onDismiss=(()=>{this.props.onDismiss(),this.publish("Dashboards.AddToDashboardPanel.Dismiss")}),this.state={selectedItem:void 0,dashboards:void 0,groups:void 0}}async componentDidMount(){this.publish("Dashboards.AddToDashboardPanel.Loaded");const e=await this.fetchData();this.processData(e.allDashboards,e.favoriteDashboards,e.allOwners,e.myTeams)}render(){if(this.props.isOpen){const e=[{className:"widget-config-save",onClick:this.onOk,text:h.PanelOk,primary:!0,disabled:void 0===this.state.selectedItem},{className:"widget-config-cancel",onClick:this.onDismiss,text:h.PanelCancel}],s=void 0!==this.state.dashboards&&void 0!==this.state.groups;return a.createElement(l.Panel,{className:"add-to-dashboard-panel",onDismiss:this.props.onDismiss,titleProps:{text:h.PanelTitle},footerButtonProps:e},a.createElement("div",null,a.createElement(i.FormatComponent,{format:h.PanelInstruction},a.createElement("b",null,this.props.widgetName)),!s&&a.createElement(c.Spinner,null),s&&a.createElement(p.SimpleDashboardPicker,{dashboards:this.state.dashboards,onSelection:this.onSelectedDashboardChanged,selectedItem:this.state.selectedItem,groups:this.state.groups})))}return null}publish(e){this.context.pageContext.getService("IVssTelemetryService").publishEvent("Dashboards",e,{})}async fetchData(){const e=this.context.pageContext.getService("IVssContributionService"),s=e.getDataAsync("ms.vss-dashboards-web.all-dashboards-data-provider"),a=e.getDataAsync("ms.vss-dashboards-web.favorite-dashboards-data-provider"),o=(0,r.getMyTeams)(this.context.pageContext),t=await s,d=t&&t.dashboards||[],i=t&&t.owners||[],n=await a;return{allDashboards:d,favoriteDashboards:n&&n.map(e=>e.dashboard)||[],allOwners:i,myTeams:await o||[]}}processData(e,s,a,o){const r=(0,n.isFeatureEnabled)(this.context.pageContext,"ms.vss-dashboards.team-agnostic-dashboards-feature",!1),i={};for(const e of a)i[e.id]=e.name;const l=[],c=e.filter(e=>i[e.ownerId]&&1===e.dashboardScope);l.push(...c.map(e=>Object.assign(Object.assign({},e),{groupKey:e.ownerId,displayName:e.name}))),r?l.push(...e.map(e=>{const s=i[e.ownerId],a=2===e.dashboardScope?t.allProjectDashboardsGroup.key:t.allTeamDashboardsGroup.key,o=s?`${s} - ${e.name}`:`${e.name}`;return Object.assign(Object.assign({},e),{groupKey:a,displayName:o})})):l.push(...c.map(e=>{const s=i[e.ownerId];return Object.assign(Object.assign({},e),{groupKey:t.allGroup.key,displayName:`${s} - ${e.name}`})})),l.push(...s.map(e=>{const s=i[e.ownerId],a=s?`${s} - ${e.name}`:`${e.name}`;return Object.assign(Object.assign({},e),{groupKey:t.favoritesGroup.key,displayName:a})})),l.sort((e,s)=>(0,d.localeIgnoreCaseComparer)(e.displayName,s.displayName));const h=[t.favoritesGroup,...o.map(e=>({key:e.id,name:e.name})).sort((e,s)=>(0,d.localeIgnoreCaseComparer)(e.name,s.name))];r?(h.push(t.allTeamDashboardsGroup),h.push(t.allProjectDashboardsGroup)):h.push(t.allGroup),this.setState({dashboards:l,groups:h})}}s.AddToDashboardPanel.AddToDashboardPanel=t,t.allGroup={key:"add-to-dashboard-all-group",name:h.AllGroupHeader},t.allTeamDashboardsGroup={key:"add-to-dashboard-all-team-dashboards-group",name:h.AllTeamDashboardsGroupHeader},t.allProjectDashboardsGroup={key:"add-to-dashboard-all-project-dashboards-group",name:h.AllProjectDashboardsGroupHeader},t.favoritesGroup={key:"add-to-dashboard-favorite-group",name:h.FavoritesGroupHeader}}()},["Resources","SimpleDashboardPicker","AddToDashboardPanel"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-dashboards.dashboards-add-to-dashboard"}}));