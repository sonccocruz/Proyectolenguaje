"use strict";define("VSS/Features/Experiments",["require","exports","VSS/Platform/Context","VSS/Platform/Feature"],function(e,r,t,s){!function(e){r.ExperimentService={};t.Services.add("IExperimentService",{serviceFactory:class extends t.VssService{publishLoaded(e){let r={};this.addFrameworkProperties(e,"load",r),this.publishTelemetry(e,r)}publishAverageMeasurement(e,r,t){this.publishMeasurement(e,"average",r,{value:t})}publishClickThruRateMeasurement(e,r){this.publishMeasurement(e,"clickthru",r,{})}publishCountMeasurement(e,r){this.publishMeasurement(e,"count",r,{})}publishTelemetry(e,r){this.pageContext.getService("IVssTelemetryService").publishEvent("ab-tests",e,r)}publishMeasurement(e,r,t,s){this.addFrameworkProperties(e,r,s),this.addFrameworkProperty(s,"MeasurementName",t),this.publishTelemetry(e,s)}addFrameworkProperty(e,r,t){if(e[r])throw new Error(`${r} is reserved, and supplied automatically.`);e[r]=t}addFrameworkProperties(e,r,t){let i=(0,s.isFeatureEnabled)(this.pageContext,e)?"Variation":"Control";this.addFrameworkProperty(t,"MeasurementType",r),this.addFrameworkProperty(t,"ExperimentVariant",i),this.addFrameworkProperty(t,"ExperimentSchemaVersion",1)}}})}()},["ExperimentService"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-features.experiments-content"}}));